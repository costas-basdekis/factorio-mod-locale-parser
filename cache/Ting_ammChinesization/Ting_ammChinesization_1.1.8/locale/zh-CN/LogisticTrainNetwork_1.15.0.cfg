[entity-name]
logistic-train-stop=物流火车站
logistic-train-stop-input=物流火车站输入
logistic-train-stop-output=物流火车站输出
ltn-port=物流港口

[entity-description]
logistic-train-stop=火车物流网络的目的地。
ltn-port=船舶物流网络的目的地。

[item-name]
logistic-train-stop=__ENTITY__logistic-train-stop__
logistic-train-stop-input=__ENTITY__logistic-train-stop-input__
logistic-train-stop-output=__ENTITY__logistic-train-stop-output__

[recipe-name]
logistic-train-stop=__ENTITY__logistic-train-stop__
ltn-port=__ENTITY__ltn-port__

[technology-name]
logistic-train-network=物流火车网

[technology-description]
logistic-train-network=火车全自动运输物流火车站要求和提供的物品。

[virtual-signal-name]
ltn-position-any-locomotive=每个机车的编码位置
ltn-position-any-cargo-wagon=每辆货车的编码位置
ltn-position-any-fluid-wagon=每辆液体车的编码位置
ltn-position-any-artillery-wagon=每门大炮的编码位置
ltn-position=__1__的编码位置
ltn-depot=车库
ltn-depot-priority=车库优先
ltn-network-id=编码的网络ID
ltn-min-train-length=最小列车长度
ltn-max-train-length=最大列车长度
ltn-max-trains=火车数量限制
ltn-requester-threshold=最小请求数量
ltn-requester-stack-threshold=请求堆栈数量
ltn-requester-priority=请求优先级
ltn-provider-threshold=最小提供数量
ltn-provider-stack-threshold=提供堆栈数量
ltn-provider-priority=提供优先级
ltn-locked-slots=每辆货车的锁定插槽。
ltn-disable-warnings=禁用警告消息

[ltn-message]
error-duplicated-unit-number=[LTN] 错误:重复的编号“__1__”。
error-stop-orientation=[LTN] 错误:列车“__1__”停车方向无效。
error-invalid-stop=[LTN]错误：无效的列车停靠点__1__。
error-parse-item=[LTN] 错误:无法解析项目“__1__”。
error-no-stop=[LTN] 错误:无法获取提供者或请求者车站。
error-stop-output-truncated=[LTN]错误：停靠__1_的列车__2_的库存超过__3_的停靠输出限制_4__个信号
error-invalid-delivery=[LTN]错误：从停止__1_删除无效传送。
error-invalid-stop-index=错误:无效的车站：“__1__”。
error-invalid-request-index=[LTN]错误：无效索引__1__全局调度程序请求。
warning-dispatcher-disabled=[LTN] 警告:调度员禁用。没有交付将被创建。

empty-depot-item=[LTN] 当车站内没有运输物品的火车。跳过项目处理。
empty-depot-fluid=[LTN] 当车站内没有运输液体的火车。跳过流体处理。
no-provider-found=[LTN] 没有提供 __1__ 的车站发现。
provider-found=[LTN] 提供者 “__1__”：优先 __2__，__3__ 送货，__4__ __5__ 可用。
no-train-found=[LTN] 在车库没有发现 __1__≤长度≤__2__ 运输 __3__ 的火车。
train-found=[LTN] 火车运输 __1__，__2__ 堆栈发现在仓库。
creating-delivery=[LTN] 创建运输从“__1__”至“__2__”: __3__  __4__。
creating-delivery-merged=[LTN] 创建合并运输从“__1__”至“__2__”: __3__ 堆栈。
delivery-removed-train-invalid=[LTN] 从“__1__”到“__2__”的交货已被移除。 火车不再有效。
delivery-removed-timeout=[LTN] 从“__1__”到“__2__”的交货 __3__小时后移除。

train-arrived=[LTN] 火车“__1__”到达“__2__”。
train-left=[LTN] 火车“__1__”离开“__2__”。

provider_missing_cargo=[LTN] 火车 __1__ 离开供货站 __2__ 未携带足够货物。
provider_unscheduled_cargo=[LTN] 火车 __1__ 离开供货站 __2__ 携带计划外货物。
requester_unscheduled_cargo=[LTN] 火车 __1__ 到达收货站 __2__ 携带计划外货物
requester_left_over_cargo=[LTN] 火车 __1__离开收货站 __2__ 携带剩余货物

dispatcher-enabled=[LTN] 调度员启用 __1__.
dispatcher-disabled=[LTN] 调度员禁用 __1__.

[controls]
ltn-toggle-dispatcher=切换LTN调度员

[mod-setting-name]
ltn-interface-console-level=信息详细级别
ltn-interface-message-filter-age=消息过滤器超时(帧)
ltn-interface-factorio-alerts=工厂警报
ltn-interface-debug-logfile=写人调试日志文件

ltn-dispatcher-enabled=调度员启用
ltn-dispatcher-nth_tick=更新频率(帧)
ltn-dispatcher-updates-per-tick=每帧的停止数
ltn-dispatcher-requester-threshold=最小请求数量
ltn-dispatcher-provider-threshold=最小提供数量
ltn-dispatcher-schedule-circuit-control=调度电路条件
ltn-dispatcher-depot-inactivity(s)=车库不活动
ltn-dispatcher-stop-timeout(s)=车站无动作超时
ltn-dispatcher-delivery-timeout(s)=交货超时
ltn-dispatcher-requester-delivery-reset=请求交付复位
ltn-dispatcher-finish-loading=加载结束
ltn-depot-reset-filters=车站复位过滤器
ltn-stop-default-network=默认网络ID

[mod-setting-description]
ltn-interface-console-level=消息的详细级别。\n\n 0:关闭消息 \n 不会生成消息。\n\n 1:错误警告 \n仅打印错误警告。\n\n 2:通知 \n（默认）打印基本信息，如缺少资源或生成交货。\n\n 3:详细信息 \n打印有关查找提供者和列车的详细信息。
ltn-interface-message-filter-age=过滤消息之前再次显示的消息时间。\n 默认=60*60*5=18000(帧)
ltn-interface-factorio-alerts=将错误和警告显示为工厂警报
ltn-interface-debug-logfile=写入日志信息至 /Factorio/factorio-current.log

ltn-dispatcher-enabled=警告: 停用调度员停止交货。\n物品水平仍将被监控。
ltn-dispatcher-nth_tick=停止和请求更新的速度。\n数字越大，通过将更新分散到更多计时来提高性能。\n当设置>1时，强制每个计时更新为1。
ltn-dispatcher-updates-per-tick=限制每个计时更新的停止和请求数。\n数字越小，性能越高。\n当更新频率>1时忽略。
ltn-dispatcher-requester-threshold=触发交货的最小物品/液体请求数量。\n 可以被设置在请求车站的“最小请求数量”信号覆盖。\n 默认=1000(帧)
ltn-dispatcher-provider-threshold=触发交货的最小物品/液体提供数量。\n 可以被设置在提高车站的“最小提供数量”信号覆盖。\n 默认=1000(帧)
ltn-dispatcher-schedule-circuit-control=添加电路条件等待红色 = 0 或 绿 ≥ 1 所有停止.\n警告：所有车站都需要启用“发送到火车”并和电路连接。否则火车会陷入永远的等待。\n默认 = 不启用
ltn-dispatcher-depot-inactivity(s)=列车在车库不活动时停留时间（秒）。\n默认=5
ltn-dispatcher-stop-timeout(s)=列车在车站最长停靠时间（秒）。\n默认=120
ltn-dispatcher-delivery-timeout(s)=列车多久未交付货物就认为它迷路了（秒）。\n默认=600（10分钟）
ltn-dispatcher-requester-delivery-reset=否：（默认）\n 当火车到达车站时，交付和时间表被重置。\n 对在车站停靠的火车没有影响。\n 是\n 当火车离开车站时，交付和时间表被重置。\n 对在车站停靠的火车将取消交付和时间表重置。
ltn-dispatcher-finish-loading=启用：（默认）\n 通过添加要求2秒的无动作状态，防止列车离开时 机械臂、泵 正在工作。\n\n 禁用：\n 所有物品已经装载后，火车将立即离开。\n 装载车站的机械臂将会卡住。
ltn-depot-reset-filters=启用: (默认)\n货车在进入车站时有过滤器和堆栈限制。
ltn-stop-default-network=在没有“编码的网络ID”信号的情况下用于停止的网络ID。

[string-mod-setting]
ltn-interface-console-level-0=0: 关闭
ltn-interface-console-level-1=1: 错误 & 警告
ltn-interface-console-level-2=2: 通知
ltn-interface-console-level-3=3: 详细信息
