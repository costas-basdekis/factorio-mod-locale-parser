#barstorio 翻譯

transport-depot-choose-item=請求項目
supply-depot=供應倉庫
request-depot=請求倉庫
fuel-depot=油庫
fuel-depots=加油路網
fluid-depot=流體庫
buffer-depot=緩衝倉庫
road=路
transport-drone=運輸無人機
transport-drone-capacity=運輸無人機堆棧容量
transport-drone-speed=運輸無人機速度
transport-system=運輸系統
request-item=請求__1__

available-drones=可用無人機：__1__
active-drones=主動無人機：__1__
available-fuel=可用燃料：__1__
current=當前的
requested=請求
filter=篩選：
road-networks=道路網絡
road-network-size=網絡 #__1__-__2__個倉庫
contents=內容
supply-depots=補給站
fluid-depots=流體庫
fuel-depots-tab=燃料庫
request-depots=請求倉庫
buffer-depots=緩衝倉庫
mining-depots=礦場
no-request-set=未設置請求
no-networks=沒有可顯示的網絡

no-fuel-depot-on-network=請求庫的網絡上沒有燃料庫
no-fuel-in-network=請求倉庫的網絡中沒有燃料

transport-depot-writer=運輸站電路編寫器
transport-depot-reader=運輸站電路閱讀器
road-network-reader=路網電路閱讀器
transport-depot-circuits=運輸站電路網


[mod-name]
Transport_Drones=Transport Drones[運輸無人機]


[mod-description]
Transport_Drones=添加運輸無人機和運輸倉庫

[controls]
toggle-road-network-gui=切換道路網絡 GUI

[transport_drones]
title_buffer_depots=緩衝倉庫
title_circuit_connectors=電路連接器
title_depot_reader=倉庫讀卡器
title_depot_writer=倉庫作家
title_depots=運輸站
title_drone=運輸無人機
title_fuel_depots=燃料庫
title_mining_depots=礦場
title_network_reader=路網閱讀器
title_request_depots=請求倉庫
title_road_network=公路網
title_supply_depots=供應倉庫
title_transport_drones=運輸無人機

[transport_drones_pages]
welcome-1=歡迎使用運輸無人機！\n運輸無人機是一個模組，它引入了一種在工廠周圍移動材料的新方法。
fuel-depot-1=道路網絡內的所有運輸都需要燃料。燃料由 [font=default-bold]Fuel Depots[/font] 提供。\n\n操作很簡單：\n - 在道路網絡上放置一個燃料庫。\n - 插入燃料。\n - 添加運輸無人機。\n\n現在燃料庫將派遣運輸無人機到路網中的燃料庫。
drones-1=[font=default-bold]運輸無人機[/font] 是在倉庫之間運輸材料的代理。它們只分配到一個倉庫。為了工作，他們需要燃料，而且他們在開車時會產生污染。
drone-details=當前無人機規格如下：\n - 油耗：[font=default-bold]__1__[/font] 每公里。\n - 污染：[font=default-bold]__2__[/font] 每分鐘。\n - 無人機物品容量：[font=default-bold]__3__[/font] 堆疊。\n - 無人機流體容量：[font=default-bold]__4__[/font]。\n - 最大無人機速度：[font=default] -bold]__5__[/font] 公里/小時。
request-depot-1=要在道路網絡中移動物品，您可以使用 [font=default-bold]Request Depots[/font]。它們會將無人機運送到最近的帶有請求物品的補給站。\n請求補給站將收集的物品數量取決於請求補給站中的無人機數量。對於每架無人機，請求倉庫將根據無人機的容量增加其請求數量。\n\n 示例 1：如果無人機可以容納 1 堆（無升級），並且您放入 5 架無人機，請求倉庫將調度無人機，直到它的庫存中有 5 層。\n 示例 2：如果無人機可以容納 2 層（1 次容量升級），並且您放入 10 架無人機，請求倉庫將派遣無人機，直到其庫存中有 20 層。 \n\n通過這種方式，您可以調整和調整請求的數量，以考慮所需的吞吐量、請求和供應庫之間的距離等因素。可以使用傳輸庫編寫器覆蓋請求計數。\n請求倉庫的設置很簡單：\n - 將請求倉庫放在道路網絡上。\n - 選擇要請求的項目。\n - 插入運輸無人機。\n請求倉庫將首先從網絡請求燃料。一旦它有燃料，它就會開始派遣無人機來收集請求的物品。
supply-depot=[font=default-bold]補給站[/font]（和流體站）是道路網絡的被動參與者。他們將他們的內容提供給道路網絡中的請求站點。
road-network=[font=default-bold]Road network[/font] 是車輛段相互連接的系統，以及運輸無人機運行的道路。只需使用道路瓷磚即可構建道路網絡。任何連接的道路圖塊都是同一道路網絡的一部分。兩個不相連的路磚區域是獨立的路網，它們的車段不會互相補給。
buffer-depot=[font=default-bold]Buffer depot[/font] 既是請求倉庫又是供應倉庫。\n\n一個很好的用例是從遠處的前哨收集礦石，然後分發到附近的許多請求倉庫。緩衝站可以有大量的無人機，附近的請求站只需要1-2架無人機來處理從請求者到緩衝區的短途旅行。
circuit-connectors=電路連接器是向車輛段和道路網絡讀取和寫入信號的方式。它們允許使用邏輯條件和電路網絡邏輯來控制倉庫的行為。
depot-reader=[font=default-bold]Transport depot reader[/font] 允許您讀取請求庫、燃料庫、採礦庫、流體庫和緩衝庫的內容。\n\n輸出只有 1 個信號，即是輸出庫存的內容。
depot-writer=[font=default-bold]Transport depot writer[/font] 允許您根據線路/物流條件啟用和禁用倉庫。\n 示例 1：禁用請求倉庫將停止它發送無人機來收集物品。\n示例 2：禁用補給站將阻止其向道路網絡提供其物品。
depot-writer-special=請求/緩衝倉庫有一個特殊情況。如果電路信號是請求的物品並且條件為’=’，則請求倉庫將使用信號計數作為物品請求計數。\n 示例：如果信號設置為&’Iron gear=155’，則請求depot 將嘗試填充最多 155 件物品，無論無人機數量如何。\n\n這也適用於電路信號。\n 示例：如果信號設置為“Iron gear=Signal Green”，則它將評估該值’信號綠色’，這將是項目請求計數。
transport-depots=運輸站是道路網絡中協調物品和流體運輸的實體。他們管理道路網絡的內容和請求。它們通過地面上的“警告”牌連接到道路網絡，這個位置是無人機進出的地方。
mining-depots=[font=default-bold]Mining depots[/font] 也可以直接將其內容提供給路網。只需將礦機輸入/輸出位置連接到路網即可。
network-reader=[font=default-bold]路網閱讀器[/font]可以讀取它所連接的路網的內容。但是，您必須通過打開閱讀器並選擇要讀取其內容的項目/流體來指定要讀取的信號。選擇後，道路網絡閱讀器將繼續使用道路網絡的內容更新該項目的計數。\n\n例如，如果道路網絡中的礦石量低於特定值，或啟用保留存儲。



